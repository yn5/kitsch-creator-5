{"version":3,"sources":["styles/reset.js","styles/global.js","lib/sketches/bobross.js","components/views/_styled/bobross-sketch-view.styled.js","components/views/bobross-sketch-view.js","components/views/home-view.js","components/_styled/layout.styled.js","components/layout.js","app.js","serviceWorker.js","index.js"],"names":["createGlobalStyle","colorGenerator","positionGenerator","sizeGenerator","getRandomPoint","jitter","Math","random","clip","input","min","max","clr","jitterY","jitterX","x","y","randomX","randomY","getColorR","getColorG","getColorB","getColorA","getPosition","getSize","BobrossSketch","paused","viewWidth","viewHeight","setup","sketch","this","document","body","offsetWidth","offsetHeight","createCanvas","draw","Array","from","keys","map","drawEllipse","clear","togglePause","colorR","next","value","colorG","colorB","colorA","colorStroke","position","size","stroke","fill","ellipse","Container","styled","div","Overlay","Header","OutputImage","img","Title","h1","TextButton","button","BobrossSketchView","PureComponent","constructor","super","handleClickPause","state","setState","handleClickRenderToImage","component","pngDataUrl","canvas","childNodes","toDataURL","getPngDataUrl","handleCloseOverlay","handleClickClear","componentDidMount","P5","p5Sketch","sketchInstance","setupP5","render","onClick","type","ref","comp","alt","src","HomeView","to","pathname","Layout","children","App","basename","process","path","exact","Boolean","window","location","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8342146.chunk.js","sourcesContent":["/* eslint-disable no-unused-expressions */\n\nimport { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n`;\n","/* eslint-disable no-unused-expressions */\n\nimport { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    height: 100%;\n  }\n\n  body {\n    font-family: sans-serif;\n  }\n`;\n","function getRandomPoint(jitter) {\n  return Math.random() * jitter - jitter / 2;\n}\n\nfunction getRandomSizePoint(jitter) {\n  return Math.random() ** 1.25 * jitter - jitter / 2;\n}\n\nfunction clip(input, min, max) {\n  return Math.min(max, Math.max(min, input));\n}\n\nfunction* colorGenerator() {\n  const jitter = 2;\n  let clr;\n\n  yield (clr = Math.random() * 255);\n\n  while (true) {\n    clr += Math.random() * jitter - jitter / 2;\n    yield (clr = clip(clr, 0, 255));\n  }\n}\n\nfunction* positionGenerator() {\n  const jitterY = 0.01;\n  const jitterX = 0.004;\n  let x = Math.random();\n  let y = Math.random();\n  yield { x, y };\n\n  while (true) {\n    const randomX = getRandomPoint(jitterX);\n    const randomY = getRandomPoint(jitterY);\n    x = clip(x + randomX, 0, 1);\n    y = clip(y + randomY, 0, 1);\n\n    yield {\n      x,\n      y,\n    };\n  }\n}\n\nfunction* sizeGenerator() {\n  let x = Math.random() ** 2 * 150;\n\n  yield {\n    x,\n    y: x,\n  };\n\n  while (true) {\n    x = clip(0, x + getRandomSizePoint(10), 1050);\n\n    yield {\n      x,\n      y: x,\n    };\n  }\n}\n\nconst getColorR = colorGenerator();\nconst getColorG = colorGenerator();\nconst getColorB = colorGenerator();\nconst getColorA = colorGenerator();\nconst getPosition = positionGenerator();\nconst getSize = sizeGenerator();\n\nclass BobrossSketch {\n  paused = false;\n\n  viewWidth = null;\n\n  viewHeight = null;\n\n  setup = (sketch) => () => {\n    this.viewWidth = document.body.offsetWidth;\n    this.viewHeight = document.body.offsetHeight;\n    sketch.createCanvas(this.viewWidth, this.viewHeight);\n\n    this.sketch = sketch;\n  };\n\n  draw = (sketch) => () => {\n    if (this.paused) {\n      return;\n    }\n    Array.from(Array(100).keys()).map(() => this.drawEllipse(sketch));\n  };\n\n  clear = () => {\n    this.sketch.clear();\n  };\n\n  togglePause = () => {\n    this.paused = !this.paused;\n  };\n\n  drawEllipse = (sketch) => {\n    const colorR = getColorR.next().value;\n    const colorG = getColorG.next().value;\n    const colorB = getColorB.next().value;\n    const colorA = getColorA.next().value;\n    const colorStroke = colorR * 0.35;\n\n    const { x, y } = getPosition.next().value;\n    const position = { x: x * this.viewWidth, y: y * this.viewHeight };\n    const size = getSize.next().value;\n\n    sketch.stroke(colorStroke);\n    sketch.fill(colorR, colorG, colorB, colorA);\n    sketch.ellipse(position.x, position.y, size.y, size.x);\n  };\n}\n\nexport default BobrossSketch;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex: 1 1 auto;\n  overflow: auto;\n`;\n\nexport const Overlay = styled.div`\n  display: flex;\n  flex-direction: column;\n  z-index: 999;\n  position: fixed;\n  left: 0;\n  top: 0;\n  padding: 2rem;\n  width: 100%;\n  height: 100%;\n  background-color: white;\n`;\n\nexport const Header = styled.div`\n  display: flex;\n  flex: 0 1 auto;\n  align-items: center;\n  padding: 1rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nexport const OutputImage = styled.img`\n  display: flex;\n  flex: 1 1 auto;\n  background: url('/assets/images/checkered-transparency-background.svg');\n  background-image: linear-gradient(45deg, #bbbbbb 25%, transparent 25%),\n    linear-gradient(-45deg, #bbbbbb 25%, transparent 25%),\n    linear-gradient(45deg, transparent 75%, #bbbbbb 75%),\n    linear-gradient(-45deg, transparent 75%, #bbbbbb 75%);\n  background-size: 20px 20px;\n  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n  object-fit: contain;\n  overflow: auto;\n`;\n\nexport const Title = styled.h1`\n  margin: 1rem 0;\n`;\n\nexport const TextButton = styled.button`\n  background: none;\n  color: inherit;\n  border: none;\n  border-bottom: 1px solid black;\n  padding: 0;\n  font: inherit;\n  cursor: pointer;\n  outline: inherit;\n`;\n","/* eslint-disable no-param-reassign */\nimport React, { PureComponent } from 'react';\nimport P5 from 'p5';\nimport BobrossSketch from '../../lib/sketches/bobross';\nimport {\n  TextButton,\n  Container,\n  OutputImage,\n  Overlay,\n  Header,\n  Title,\n} from './_styled/bobross-sketch-view.styled';\n\nfunction getPngDataUrl(canvas) {\n  const pngDataUrl = canvas.childNodes?.[0]?.toDataURL('image/png');\n\n  return pngDataUrl;\n}\n\nfunction setupP5(sketchInstance, p5Sketch) {\n  p5Sketch.setup = sketchInstance.setup(p5Sketch);\n  p5Sketch.draw = sketchInstance.draw(p5Sketch);\n}\n\nexport default class BobrossSketchView extends PureComponent {\n  constructor() {\n    super();\n\n    this.state = {\n      paused: false,\n      pngDataUrl: null,\n    };\n    this.sketch = new BobrossSketch();\n  }\n\n  componentDidMount() {\n    new P5((p5Sketch) => setupP5(this.sketch, p5Sketch), this.component); // eslint-disable-line no-new\n  }\n\n  handleClickPause = () => {\n    const { paused } = this.state;\n\n    this.sketch.togglePause();\n\n    this.setState({\n      paused: !paused,\n    });\n  };\n\n  handleClickRenderToImage = () => {\n    if (!this.component) {\n      return;\n    }\n\n    const pngDataUrl = getPngDataUrl(this.component);\n    this.setState({\n      pngDataUrl,\n    });\n  };\n\n  handleCloseOverlay = () => {\n    this.setState({\n      pngDataUrl: null,\n    });\n  };\n\n  handleClickClear = () => {\n    this.sketch.clear();\n  };\n\n  render() {\n    const { paused, pngDataUrl } = this.state;\n\n    return (\n      <>\n        <Header>\n          <TextButton onClick={this.handleClickPause} type=\"button\">\n            {paused ? 'Play' : 'Pause'}\n          </TextButton>\n          <TextButton onClick={this.handleClickClear} type=\"button\">\n            Clear\n          </TextButton>\n          <TextButton onClick={this.handleClickRenderToImage} type=\"button\">\n            Render to image\n          </TextButton>\n        </Header>\n        <Container\n          ref={(comp) => {\n            this.component = comp;\n          }}\n        />\n        {pngDataUrl && (\n          <Overlay>\n            <Header>\n              <Title>\n                You can save the image by right clicking it and using the\n                context menu\n              </Title>\n              <TextButton onClick={this.handleCloseOverlay} type=\"button\">\n                Close overlay\n              </TextButton>\n            </Header>\n            <OutputImage alt=\"Rendered output\" src={pngDataUrl} />\n          </Overlay>\n        )}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function HomeView() {\n  return (\n    <Redirect\n      to={{\n        pathname: '/sketches/bobross',\n        state: { from: '/' },\n      }}\n    />\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 100%;\n`;\n","import React from 'react';\nimport T from 'prop-types';\nimport { Container } from './_styled/layout.styled';\n\nfunction Layout({ children }) {\n  return <Container>{children}</Container>;\n}\n\nLayout.propTypes = {\n  children: T.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ResetStyles from './styles/reset';\nimport GlobalStyles from './styles/global';\nimport BobrossSketchView from './components/views/bobross-sketch-view';\nimport HomeView from './components/views/home-view';\nimport Layout from './components/layout';\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Layout>\n            <Route component={HomeView} path=\"/\" exact />\n            <Route\n              component={BobrossSketchView}\n              path=\"/sketches/bobross\"\n              exact\n            />\n          </Layout>\n        </Switch>\n      </BrowserRouter>\n      <ResetStyles />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}