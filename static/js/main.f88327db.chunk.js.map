{"version":3,"sources":["styles/reset.js","lib/sketches/bobross.js","components/views/_styled/bobross-sketch-view.styled.js","components/views/bobross-sketch-view.js","components/views/home-view.js","app.js","serviceWorker.js","index.js"],"names":["createGlobalStyle","viewWidth","viewHeight","_templateObject","colorGenerator","positionGenerator","sizeGenerator","drawingDuration","pauseDuration","paused","getRandomPoint","jitter","Math","random","clip","input","min","max","clr","regenerator_default","a","wrap","_context","prev","next","stop","_marked","this","jitterY","jitterX","x","y","randomX","randomY","_context2","_marked2","_context3","pow","_marked3","getColorR","getColorG","getColorB","getColorA","getPosition","getSize","drawEllipse","sketch","colorR","value","colorG","colorB","colorA","colorStroke","_getPosition$next$val","position","size","stroke","fill","ellipse","togglePause","clear","setTimeout","bobross","draw","Array","from","keys","map","setup","document","body","offsetWidth","offsetHeight","createCanvas","Container","styled","div","bobross_sketch_view_styled_templateObject","s","bobrossSketch","BobrossSketchView","P5","component","_this","react_default","createElement","ref","comp","PureComponent","HomeView","Redirect","to","pathname","state","App","Fragment","BrowserRouter","basename","process","Switch","Route","path","exact","styles_reset","Boolean","window","location","hostname","match","ReactDOM","render","app","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f88327db.chunk.js","sourcesContent":["/* eslint-disable no-unused-expressions */\n\nimport { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n`;\n","const minute = 60 * 1000;\nconst drawingDuration = 0.2 * minute;\nconst pauseDuration = 0.5 * minute;\nlet paused = false;\nlet viewWidth;\nlet viewHeight;\n\nfunction getRandomPoint(jitter) {\n  return (Math.random() * jitter) - (jitter / 2);\n}\n\nfunction getRandomSizePoint(jitter) {\n  return ((Math.random() ** 1.25) * jitter) - (jitter / 2);\n}\n\nfunction clip(input, min, max) {\n  return Math.min(max, Math.max(min, input));\n}\n\nfunction pause(ps) {\n  paused = !!ps;\n}\n\nfunction* colorGenerator() {\n  const jitter = 2;\n  let clr;\n\n  yield clr = Math.random() * 255;\n\n  while (true) {\n    clr += ((Math.random() * jitter) - (jitter / 2));\n    yield clr = clip(clr, 0, 255);\n  }\n}\n\nfunction* positionGenerator() {\n  const jitterY = 0.01;\n  const jitterX = 0.004;\n  let x = Math.random();\n  let y = Math.random();\n  yield { x, y };\n\n  while (true) {\n    const randomX = getRandomPoint(jitterX);\n    const randomY = getRandomPoint(jitterY);\n    x = clip(x + randomX, 0, 1);\n    y = clip(y + randomY, 0, 1);\n\n    yield {\n      x,\n      y,\n    };\n  }\n}\n\nfunction* sizeGenerator() {\n  let x = (Math.random() ** 2) * 150;\n\n  yield {\n    x,\n    y: x,\n  };\n\n  while (true) {\n    x = clip(0, x + getRandomSizePoint(10), 1050);\n\n    yield {\n      x,\n      y: x,\n    };\n  }\n}\n\n\nconst getColorR = colorGenerator();\nconst getColorG = colorGenerator();\nconst getColorB = colorGenerator();\nconst getColorA = colorGenerator();\nconst getPosition = positionGenerator();\nconst getSize = sizeGenerator();\n\nconst drawEllipse = (sketch) => {\n  const colorR = getColorR.next().value;\n  const colorG = getColorG.next().value;\n  const colorB = getColorB.next().value;\n  const colorA = getColorA.next().value;\n  const colorStroke = colorR * 0.35;\n\n  const { x, y } = getPosition.next().value;\n  const position = { x: x * viewWidth, y: y * viewHeight };\n  const size = getSize.next().value;\n\n  sketch.stroke(colorStroke);\n  sketch.fill(colorR, colorG, colorB, colorA);\n  sketch.ellipse(position.x, position.y, size.y, size.x);\n};\n\nfunction togglePause(sketch) {\n  if (!paused) {\n    sketch.clear();\n  }\n  setTimeout(() => {\n    pause(!paused);\n    togglePause(sketch);\n  }, paused ? pauseDuration : drawingDuration);\n}\n\nfunction setup(sketch) {\n  return () => {\n    viewWidth = document.body.offsetWidth;\n    viewHeight = document.body.offsetHeight;\n    sketch.createCanvas(viewWidth, viewHeight);\n    togglePause(sketch);\n  };\n}\n\nfunction draw(sketch) {\n  return () => {\n    if (paused) {\n      return;\n    }\n    Array.from(Array(100).keys()).map(() => drawEllipse(sketch));\n  };\n}\n\nexport default {\n  draw,\n  setup,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 100vh;\n  overflow: hidden;\n  width: 100vw;\n`;\n","/* eslint-disable no-param-reassign */\nimport React, { PureComponent } from 'react';\nimport P5 from 'p5';\nimport bobrossSketch from '../../lib/sketches/bobross';\nimport { Container } from './_styled/bobross-sketch-view.styled';\n\nfunction s(sketch) {\n  sketch.setup = bobrossSketch.setup(sketch);\n  sketch.draw = bobrossSketch.draw(sketch);\n}\n\nexport default class BobrossSketchView extends PureComponent {\n  componentDidMount() {\n    new P5(s, this.component); // eslint-disable-line no-new\n  }\n\n  render() {\n    return <Container ref={(comp) => { this.component = comp; }} />;\n  }\n}\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function HomeView() {\n  return (\n    <Redirect\n      to={{\n        pathname: '/sketches/bobross',\n        state: { from: '/' },\n      }}\n    />\n  );\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport GlobalStyle from './styles/reset';\nimport BobrossSketchView from './components/views/bobross-sketch-view';\nimport HomeView from './components/views/home-view';\n\nfunction App() {\n  return (\n    <>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route\n            component={HomeView}\n            path=\"/\"\n            exact\n          />\n          <Route\n            component={BobrossSketchView}\n            path=\"/sketches/bobross\"\n            exact\n          />\n        </Switch>\n      </BrowserRouter>\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}